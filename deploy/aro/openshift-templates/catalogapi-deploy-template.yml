apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${TEMPLATE_NAME}
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: ${TEMPLATE_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    revisionHistoryLimit: 2
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
          - env:
              - name: PicBaseUrl
                value: ${PIC_BASE_URL}
              - name: EventBusConnection
                value: ${RABBITMQ_HOSTNAME}
              - name: PORT
                value: "8080"
              - name: GRPC_PORT
                value: "8081"
              - name: PATH_BASE
                value: /catalog-api
              - name: ConnectionString
                valueFrom:
                  secretKeyRef:
                    key: ConnectionString
                    name: catalog-db-connection-secret
            image: docker-registry.default.svc:5000/${IMAGE_REGISTRY_PROJECT_NAME}/${APPLICATION_NAME}:latest
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true 
          containerNames:
            - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
            namespace: ${IMAGE_REGISTRY_PROJECT_NAME}
        type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: ${TEMPLATE_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8081-tcp-grpc
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      template: ${TEMPLATE_NAME}
    name: catalog-public-route
  spec:
    host: ${CATALOG_PUBLIC_HOSTNAME}
    port:
      targetPort: 8080-tcp
    tls:
      caCertificate: |
        ${CA_CERTIFICATE}
      certificate: |
        ${CERTIFICATE}
      key: |
        ${PRIVATE_KEY}
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: catalogapi
- description: The OpenShift project name that is hosting the image registry.
  displayName: Image Registry Project Name
  name: IMAGE_REGISTRY_PROJECT_NAME
  required: true
- description: The template name.
  displayName: Template Name
  name: TEMPLATE_NAME
  required: true
  value: catalogapi-deploy-template
- description: The public base URL for the catalog pictures
  displayName: Pictures Base URL
  name: PIC_BASE_URL
  required: true
- description: The hostname of the RabbitMQ service
  displayName: RabbitMQ Hostname
  name: RABBITMQ_HOSTNAME
  required: true
- description: The public hostname of the Catalog route
  displayName: Catalog Public Hostname
  name: CATALOG_PUBLIC_HOSTNAME
  required: true
- description: The CA Certificate thumbprint value
  displayName: CA Certificate
  name: CA_CERTIFICATE
  required: true
- description: The Certificate thumbprint value
  displayName: Certificate
  name: CERTIFICATE
  required: true
- description: The private key thumbprint value for the certificate
  displayName: Private Key
  name: PRIVATE_KEY
  required: true